<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Home Values per Square Foot in Pima County</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.js"></script>
    <style>
      body {
        margin: 0;
        padding: 0;
      }
      h2,
      h3 {
        margin: 10px;
        font-size: 14px;
      }
      h3 {
        font-size: 14px;
      }
      p {
        margin: 10px;
      }
        .map-overlay {
          position: absolute;
          bottom: 0;
          right: 0;
          background: #fff;
          margin-right: 20px;
          font-family: Arial, sans-serif;
          overflow: auto;
          border-radius: 3px;
        }
      #map { position: absolute; top: 0; bottom: 0; width: 100%; }
      #legend {
        opacity: 0.75;
        padding: 10px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        line-height: 16px;
        font-size: 13px;
        height: 240px;
        margin-bottom: 40px;
        width: 90px;
      }
        .legend-key {
          display: inline-block;
          border-radius: 20%;
          width: 10px;
          height: 10px;
          margin-right: 5px;
        }
    </style>
    
  </head>
  <body>
    <div id="map"></div>
    <div class="map-overlay" id="legend"><b>Home value per sqft</b><br><br></div>
    <script>

      // Display our basemap, which already shows features

      mapboxgl.accessToken = 'pk.eyJ1IjoibHVrZWtuaXBlIiwiYSI6ImNqMTh5cnludzA2dmQzM210MHM1eXNoMncifQ.8jLT0llZDjWFbeXIewOKdw';      
      const map = new mapboxgl.Map({
        container: 'map', // container ID
        style: 'mapbox://styles/lukeknipe/cl1i4ikjw007u14qo9nawqj4t', // style URL
        center: [-111, 32.1], // starting position [lng, lat]
        zoom: 9 // starting zoom
      });

      // Add an invisible vector tile layer to supply data to popup
      
      map.on('load', function () {
        map.addSource('value_per', {
          type: 'vector',
          url: 'mapbox://lukeknipe.value_per'
        });
        
        map.addLayer({
          'id': 'value_per',
          'type': 'circle',
          'source': 'value_per',
          'source-layer': 'value_per',
          paint: {
            'circle-opacity': 0
          }
          
        })
        
        // Get data from the vector tiles for popup

        map.on('click', 'value_per', function (e) {
          var coordinates = e.features[0].geometry.coordinates.slice();
          var address = e.features[0].properties.ADDRESS;
          var value = e.features[0].properties.VALUE;
          var sqft = e.features[0].properties.SQFT;
          //        var value_per = e.features[0].properties.VALUE_PER;
          //	    Wait, let's do this a different way...
          var vp = value/sqft;
          let value_per = vp.toFixed(2);
          
          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
          }
          
          // Display the popup
             
          new mapboxgl.Popup()
            .setLngLat(coordinates)
            .setHTML(address + "<br>2023 Value: " + value + "<br>Square Footage: " + sqft + "<br>Value/sqft: <b>$" + value_per + "</b>")
            .addTo(map);
        });
        
        map.on('mouseenter', 'value_per', function () {
          map.getCanvas().style.cursor = 'pointer';
        });
        
        map.on('mouseleave', 'value_per', function () {
          map.getCanvas().style.cursor = '';
        });
        
        // define layer names
        const layers = [
          '0 - 108',
          '108 - 117',
          '117 - 124',
          '124 - 130',
          '130 - 135',
          '135 - 141',
          '141 - 148',
          '148 - 155',
          '155 - 165',
          '165 - 179',
          '179 - 201',
          '201 +',
        ];
        
        const colors = [
          '#2b83ba',
          '#59a4b2',
          '#88c5aa',
          '#b3e0a7',
          '#d2edb0',
          '#f0f9ba',
          '#fff1ae',
          '#fed38c',
          '#feb669',
          '#f3854e',
          '#e54f35',
          '#d7191c'
        ];
        
        
        // create legend
        const legend = document.getElementById('legend');
        
        layers.forEach((layer, i) => {
          const color = colors[i];
          const item = document.createElement('div');
          const key = document.createElement('span');
          key.className = 'legend-key';
          key.style.backgroundColor = color;
          
          const value = document.createElement('span');
          value.innerHTML = `${layer}`;
          item.appendChild(key);
          item.appendChild(value);
          legend.appendChild(item);
        });
        
      });
      
    </script>
    
  </body>
</html>